<?php

/**
 * Implements hook_permission.
 */
function plus_tapi_permission() {
  return array(
    'administer plus_tapi' => array(
      'title' => t('Administer Plus7 TAPI Configuration'),
    ),
  );
}

/**
 * Implements hook_menu.
 */
function plus_tapi_menu() {
  $menu = array();

  $menu['admin/config/services/plus_tapi'] = array(
    'title' => 'Plus7 TAPI Configuration',
    'description' => 'Set Plus7 TAPI configurations here.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plus_tapi_config_form'),
    'access arguments' => array('administer plus_tapi'),
    'file' => 'plus_tapi.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $menu;
}

/**
 * Function to make API calls with other websites.
 *
 * @param $call
 *  name of the API call being made.
 * @param array $params
 *  (optional) an associative array of parameters to be sent along with the call.
 *  The key should be the name of the parameter iand the value of that key should
 *  be the value to be passed for that parameter.
 */
function plus_tapi_request($type = 'movies', $call, $params = array()) {

  $plus_tapi_request_method = variable_get('plus_tapi_request_method', 'curl');
  $plus_tapi_function = $plus_tapi_request_method . '_request';

  $type_resource = plus_tapi_get_resource($type);
  if (!$type_resource) {
    return FALSE;
  }

  // Wrapping taxonomy term data into entity.
  $type_wrapper = entity_metadata_wrapper('taxonomy_term', $type_resource);

  $call = $type_wrapper->field_api_url->value() . $call;

  $options['params'] = $params;
  if (!empty($type_wrapper->field_api_headers->value())) {
    $options['headers'] = $type_wrapper->field_api_headers->value();
  }

  // Making TAPI request based on request method.
  $plus_tapi_obj = new PlusTAPI();
  $response = $plus_tapi_obj->{$plus_tapi_function}($call, $options);

  return $response;
}

/**
 * Function to return event type resource information.
 *
 * @param $type
 *  name of the event: movies or dining
 *
 * @return object $resource or Boolean.
 *   return taxonomy term data based on the provided term name.
 */
function plus_tapi_get_resource($type) {
  $resource = taxonomy_get_term_by_name($type);
  return (!empty($resource)) ? reset($resource) : FALSE;
}
